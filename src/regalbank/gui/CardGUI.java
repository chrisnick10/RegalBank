/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package regalbank.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Random;

/**
 *
 * @author reedtdan
 */
public class CardGUI extends javax.swing.JFrame {

    private char credit_str;
    /**
     * Creates new form CardGUI
     */
    public CardGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        CardBox = new javax.swing.JComboBox<>();
        AccountField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        LoadNum = new javax.swing.JButton();
        IDField = new javax.swing.JTextField();
        DeleteButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        BadButton = new javax.swing.JRadioButton();
        GoodButton = new javax.swing.JRadioButton();
        ExButton = new javax.swing.JRadioButton();
        CardNumberField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Card");

        jLabel2.setText("Type");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        CardBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot" }));

        jLabel3.setText("Account");

        LoadNum.setText("LoadByNum");
        LoadNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadNumActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Credit");

        buttonGroup1.add(BadButton);
        BadButton.setText("Bad");
        BadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BadButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(GoodButton);
        GoodButton.setText("Good");
        GoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoodButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(ExButton);
        ExButton.setText("Exellent");
        ExButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Card Number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CardBox, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AccountField)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(LoadNum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDField, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                .addGap(88, 88, 88)
                                .addComponent(DeleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(createButton)))
                        .addGap(23, 23, 23))))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GoodButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ExButton))
                    .addComponent(CardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CardBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AccountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(GoodButton)
                    .addComponent(BadButton)
                    .addComponent(ExButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(LoadNum)
                    .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        String type = (String) CardBox.getSelectedItem();
        String Number = CardNumberField.getText();
        String ID = AccountField.getText();
        Random random = new Random();
        //ASsume only can modify type
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String connectionURL =
"jdbc:mysql://localhost:3306/RegalBank?autoReconnect=true&useSSL=false";
            
            String insert = " ";
            
           switch (type) {
                case "Alpha":
                    insert = "INSERT INTO CARD (CR_Number, CR_Type,CR_Assigned,CR_Expiration,CR_IntroAPR, CR_RegAPR,CR_RewardRate,CR_RewardBonus,CR_LateFee,CR_AnnualFee,CR_AccountID,CR_Rating) "
                    + "Values (" + Number + ",\"" + type + "\",CURDATE(), DATE_ADD(curdate(), INTERVAL 4 YEAR), \"0% for 12 months\", 0.15,null,30,0,0," + ID + ",\'" + credit_str + "\')";      
                    break;
                case "Bravo":
                    insert = "INSERT INTO CARD (CR_Number, CR_Type,CR_Assigned,CR_Expiration,CR_IntroAPR, CR_RegAPR,CR_RewardRate,CR_RewardBonus,CR_LateFee,CR_AnnualFee,CR_AccountID,CR_Rating) "
                    + "Values (" + Number + ",\"" + type + "\",CURDATE(), DATE_ADD(curdate(), INTERVAL 4 YEAR), \"0% for 12 months\", 0.15,1,40,0,0," + ID + ",\'" + credit_str + "\')"; 
                    break;
                case "Charlie":
                   insert = "INSERT INTO CARD (CR_Number, CR_Type,CR_Assigned,CR_Expiration,CR_IntroAPR, CR_RegAPR,CR_RewardRate,CR_RewardBonus,CR_LateFee,CR_AnnualFee,CR_AccountID,CR_Rating) "
                    + "Values (" + Number + ",\"" + type + "\",CURDATE(), DATE_ADD(curdate(), INTERVAL 4 YEAR), \"0% for 15 months\", 0.15,3,35,150,0," + ID + ",\'" + credit_str + "\')"; 
                    break;
                case "Delta":
                    insert = "INSERT INTO CARD (CR_Number, CR_Type,CR_Assigned,CR_Expiration,CR_IntroAPR, CR_RegAPR,CR_RewardRate,CR_RewardBonus,CR_LateFee,CR_AnnualFee,CR_AccountID,CR_Rating) "
                    + "Values (" + Number + ",\"" + type + "\",CURDATE(), DATE_ADD(curdate(), INTERVAL 4 YEAR), \"0% for 12 months\", 0.14,3,30,0,0," + ID + ",\'" + credit_str + "\')"; 
                    break;
                case "Echo":
                   insert = "INSERT INTO CARD (CR_Number, CR_Type,CR_Assigned,CR_Expiration,CR_IntroAPR, CR_RegAPR,CR_RewardRate,CR_RewardBonus,CR_LateFee,CR_AnnualFee,CR_AccountID,CR_Rating) "
                    + "Values (" + Number + ",\"" + type + "\",CURDATE(), DATE_ADD(curdate(), INTERVAL 4 YEAR), \"0% for 12 months\", 0.14,3,10,150,38," + ID + ",\'" + credit_str + "\')"; 
                   break;
                case "Foxtrot":
                    insert = "INSERT INTO CARD (CR_Number, CR_Type,CR_Assigned,CR_Expiration,CR_IntroAPR, CR_RegAPR,CR_RewardRate,CR_RewardBonus,CR_LateFee,CR_AnnualFee,CR_AccountID,CR_Rating) "
                    + "Values (" + Number + ",\"" + type + "\",CURDATE(), DATE_ADD(curdate(), INTERVAL 4 YEAR), \"0% for 15 months\", 0.16,1.5,30,150,0," + ID + ",\'" + credit_str + "\')"; 
                   break;
                default:        
            }
            
            Connection connection = DriverManager.getConnection(connectionURL, "root", "");
            Statement statement = connection.createStatement();
            statement.executeUpdate(insert);
            
            String result = "select * from Customer";
            ResultSet set = statement.executeQuery(result);
            
            System.out.println("Executed Query");

        } catch ( ClassNotFoundException e) {
            System.out.println("ClassException");
        } catch ( SQLException e) {
            System.out.println("SQLEXCEPTION");
            e.printStackTrace();
        }
    }//GEN-LAST:event_createButtonActionPerformed

    private void BadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BadButtonActionPerformed
        // TODO add your handling code here:
        credit_str = 'b';
    }//GEN-LAST:event_BadButtonActionPerformed

    private void GoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoodButtonActionPerformed
        // TODO add your handling code here:
        credit_str = 'g';
    }//GEN-LAST:event_GoodButtonActionPerformed

    private void ExButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExButtonActionPerformed
        // TODO add your handling code here:
        credit_str = 'e';
    }//GEN-LAST:event_ExButtonActionPerformed

    private void LoadNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadNumActionPerformed
        // TODO add your handling code here:
        try { 
            Class.forName("com.mysql.jdbc.Driver");
            String connectionURL =
"jdbc:mysql://localhost:3306/RegalBank?autoReconnect=true&useSSL=false";
            Connection connection = DriverManager.getConnection(connectionURL, "root", "");
            Statement statement = connection.createStatement();      
            String query = "select CR_Rating, CR_AccountID, CR_Type from Card where CR_Number = \"" + IDField.getText() + "\"";
            ResultSet set = statement.executeQuery(query);
            
            while (set.next()) {
                String credit_str = set.getString(1);
                switch(credit_str) {
                    case "b" :  BadButton.doClick();
                                    break;
                    case "g" :  GoodButton.doClick();
                                    break;
                    case "e" :  ExButton.doClick();
                                    break;
                    default : 
                }
                AccountField.setText(set.getString(2));
                CardNumberField.setText(set.getString(3));      
             }
            
            String result = "SELECT * from Card WHERE CR_NUMBER =" + IDField.getText();
            set = statement.executeQuery(result);

            System.out.println("Executed Query");
            String boxString = " ";
            while (set.next()) {
                
                for ( int i = 1; i <=9; i++ ) {
                    boxString = boxString + set.getString(i) + " "; 
                }
                boxString = boxString + "\n";
             }
            textArea.setText(boxString);
            
           connection.close();
        } catch ( ClassNotFoundException e) {
            System.out.println("ClassException");
        } catch ( SQLException e) {
            System.out.println("SQLEXCEPTION");
            e.printStackTrace();
        }
    }//GEN-LAST:event_LoadNumActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        try { 
            Class.forName("com.mysql.jdbc.Driver");
            String connectionURL =
"jdbc:mysql://localhost:3306/RegalBank?autoReconnect=true&useSSL=false";
            Connection connection = DriverManager.getConnection(connectionURL, "root", "");
            Statement statement = connection.createStatement();      
            String delete = "DELETE FROM Card WHERE CR_Number = \"" + IDField.getText() + "\"";
            statement.executeUpdate(delete);
            
           connection.close();
        } catch ( ClassNotFoundException e) {
            System.out.println("ClassException");
        } catch ( SQLException e) {
            System.out.println("SQLEXCEPTION");
            e.printStackTrace();
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CardGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountField;
    private javax.swing.JRadioButton BadButton;
    private javax.swing.JComboBox<String> CardBox;
    private javax.swing.JTextField CardNumberField;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JRadioButton ExButton;
    private javax.swing.JRadioButton GoodButton;
    private javax.swing.JTextField IDField;
    private javax.swing.JButton LoadNum;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
